@use 'sass-true' as *;
@use 'src/sass/tools' as ml;
@use 'sass:map';
@use 'sass:list';

@include describe('core/utils/box-model') {
	@include it('make W values in `gc` unit') {
		@include assert() {
			@include output(false) {
				@include ml.mk-util(
					'W', (
					6gc, '9gc_h StOl',
				));
			}

			@include expect(false) {
				.W6gc {
					--ml-gsc: 6;
					width: calc(50% - 2rem);
					width: var(--ml-gscf, 50%);
				}

				.W9gc_h:hover {
					--ml-gsc: 9;
					width: calc(75% - 2rem);
					width: var(--ml-gscf, 75%);
				}
			}
		}

		@include assert() {
			@include output(false) {
				@include ml.mk-util(
					'W', (
					[9gc, 10],
				));
			}

			@include expect(false) {
				.W9gc {
					--ml-gsc: 9;
					width: calc(75% - 2rem);
					width: var(--ml-gscf, 75%);
				}

				.W10gc {
					--ml-gsc: 10;
					width: calc(83.3333333333% - 2rem);
					width: var(--ml-gscf, 83.3333333333%);
				}
			}
		}
	}

	@include it('make Ml values in `gc` unit') {
		@include assert() {
			@include output(false) {
				@include ml.mk-util(
					'Ml', (
					6gc, [9gc, 10],
				));
			}

			@include expect(false) {
				.Ml6gc {
					--ml-gso: 6;
					margin-left: calc(50% + 1rem);
					margin-left: var(--ml-gsof, 50%);
				}

				.Ml9gc {
					--ml-gso: 9;
					margin-left: calc(75% + 1rem);
					margin-left: var(--ml-gsof, 75%);
				}

				.Ml10gc {
					--ml-gso: 10;
					margin-left: calc(83.3333333333% + 1rem);
					margin-left: var(--ml-gsof, 83.3333333333%);
				}
			}
		}
	}

	@include it('make clearfix util') {
		@include assert() {
			@include output(false) {
				@include ml.mk-util(
					'-Cl_h', ''
				);
			}

			@include expect(false) {
				.-Cl::after {
					display: table;
					content: '';
					clear: both;
				}

				.-Cl_h:hover::after {
					display: table;
					content: '';
					clear: both;
				}
			}
		}
	}
}
