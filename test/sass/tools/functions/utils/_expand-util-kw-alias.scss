@use 'sass:map';
@use 'sass-true' as *;
@use 'tools' as ml;

ml.$utils-db: map.deep-merge(
	ml.$utils-db,
	('utils':
	(
		'registry': (
			'Ai': (
				'keywords': (
					'e': end,
					'b': baseline,
					'c': center,
				),
			),
			'Animtf': (
				'keywords': 'timing-functions',
			),
			'Trs': (
				'keywords': ('transition', 'timing-functions',)
			),
		),
		'keywords': (
			'timing-functions': (
				'e': ease,
				'ei': ease-in,
				'eo': ease-out,
			),
			'transition': (
				'': all 3s,
				'def0': (color 3s, background-color 3s),
			),
		),
	),
	),
);

$-global-kw: map.get(ml.$utils-db, 'common', 'keywords', 'global');
ml.$utils-db: map.set(
	ml.$utils-db, 'common', 'keywords', 'global', ('$opDef': 0.88, '$trsduDef': 0.3s,)
);

@include describe('tools/functions/common/utils/') {
	@include describe('expand-util-kw-alias') {
		$-tests: (
			'util own keywords': (
				('KW', 'Ai'): (
					'values': (
						'e': end,
						'b': baseline,
						'c': center,
				)),
				('KW', 'Trs'): (
					'values': (
						'': all 3s,
						'def0': (color 3s, background-color 3s),
						'e': ease,
						'ei': ease-in,
						'eo': ease-out,
				)),
				('BpAll_KW_f,a', 'Ai'): (
					'components': (
						'at-rules': 'BpAll',
						'post-states': 'f,a',
					),
					'values': (
						'e': end,
						'b': baseline,
						'c': center,
					)
				),
			),
			'get CSS-wide keywords if util has not their own': (
				('KW', 'P'): (
					'values': (
						'ih': inherit,
						'ini': initial,
						'rv': revert,
						'us': unset,
					)
				),
			),
			'keywords from `common` section': (
				('KW.global', 'P'): (
					'values': (
						'$opDef': 0.88,
						'$trsduDef': 0.3s,
					)
				),
			),
			'keywords by predefined group alias': (
				('KW.General', 'P'): (
					'values': (
						'ih': inherit,
						'ini': initial,
						'rv': revert,
						'us': unset,
						'$opDef': 0.88,
						'$trsduDef': 0.3s,
					)
				),
				('KW.All', 'Ai'): (
					'values': (
						'ih': inherit,
						'ini': initial,
						'rv': revert,
						'us': unset,
						'$opDef': 0.88,
						'$trsduDef': 0.3s,
						'e': end,
						'b': baseline,
						'c': center,
					)
				),
				('KW.undefineD', 'Ai'): 'ERROR: Invalid keyword group alias: `undefineD`',
			),
			'path alias to keywords': (
				('KW.utils.timing-functions', 'Trs'): (
					'values': (
						'e': ease,
						'ei': ease-in,
						'eo': ease-out,
					)
				),
				('KW.common.css.random-item', 'Trs'): (
					'values': (
						'ih': inherit,
						'ini': initial,
						'rv': revert,
						'us': unset,
					)
				),
				('KW.speak.now', 'Ai'): 'ERROR: Not found keywords on this path: `speak.now`',
			),
		);

		@each $test, $data in $-tests {
			@include it($test) {
				@each $args, $expect in $data {
					@include assert-equal(
						ml.expand-util-kw-alias($args...),
						$expect,
						$inspect: true,
					);
				}
			}
		}
	}
}

ml.$utils-db: map.set(
	ml.$utils-db, 'common', 'keywords', 'global', $-global-kw
);
