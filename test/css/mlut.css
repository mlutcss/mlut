@charset "UTF-8";

html {
	height: 100%;
}

img {
	vertical-align: top;
	max-width: 100%;
	border: none;
}

/*
Core blocks

BEM blocks for using on all sites.

Второй абзац

Weight: 0

Styleguide: core-blocks
*/

/*
Core utilities

Simple text

Weight: 1

Styleguide: core-utils
*/

/*
Core styles

Simple text

Weight: 2

Styleguide: sass-base
*/

/*
Sass tools

Simple text

Weight: 3

Styleguide: sass-tools
*/

/*
Examples

Дополнительные примеры работы базовых блоков, утилит и готовых компонентов.

Weight: 4

Styleguide: examples
*/

/*
Set of ready layouts

Simple text

Styleguide: examples.layouts
*/

/*
Settings

Grid settings, compilation flags, constants and more.

Styleguide: sass-tools.settings
*/

/*
Functions

Useful functions. All MLUT functions have 'mlu' prefix.

Styleguide: sass-tools.functions
*/

/*
Mixins

Useful mixins. All MLUT mixins have 'mlu' prefix.

Styleguide: sass-tools.mixins
*/

/*===CORE-BLOCKS===*/

/*
Reset

Блок для сброса стилей у компонента.

Markup:
<ul class="reset">
	<li>1</li>
	<li>2</li>
	<li>3</li>
</ul>

Styleguide: core-blocks.reset
*/

.reset {
	margin: 0px;
	padding: 0px;
	font: inherit;
	list-style: none;
	border: 0px;
}

/*
Page

Блок для нормализации браузерных стилей страницы. Класс .page задается только для тега body. Он убирает внешний отступ по умолчанию и задает системный шрифт.

Класс используется вместо стилизации тега body, чтобы при подключении MLUT на существующий проект не произошло неожиданностей в виде переопределенных стилей.

Markup:
<body class="page">

Styleguide: core-blocks.page
*/

.page {
	height: 100%;
	margin: 0px;
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Cantarell, Ubuntu, "Fira Sans", "Droid Sans", "Helvetica Neue", Arial, sans-serif;
}

/*
Row

Универсальный блок для создания раскладок. Подходит для колонок, карточек и горизонтальных списков. По умолчанию, для раскладок используется технология inline-block. С помощью утилиты D можно поменять технологию раскладки на flexbox.

Части раскладки внутри row создаются с помощью элементов:
* [row__col](#kssref-core-blocks-row-row__col)
* [row__cell](#kssref-core-blocks-row-row__cell)
* [row__item](#kssref-core-blocks-row-row__item)

Раскладки можно вкладывать друг в друга неограниченное количество раз.

../../../test/grid.html

Markup:
<div class="row">
</div>

Styleguide: core-blocks.row
*/

/*
row__col

Основной элемент для создания колонок. По умолчанию растягивается на всю ширину контейнера. У колонок есть отступы по бокам и снизу.

Размеры колонкам задаются с помощью утилит.

Markup:
<div class="row">
	<div class="test-content row__col W2gc_sm W3gc_md">
		<h3>W2gc_sm W3gc_md</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-blocks.row.row__col
*/

/*
row__cell

Альтернативный элемент для создания колонок. По умолчанию растягивается на всю ширину контейнера. У колонок есть отступы по бокам.

Размеры задаются с помощью утилит.

Markup:
<div class="row">
	<div class="test-cell row__cell W2gs_sm W3gs_md">
		<h3>W2gs_sm W3gs_md</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-blocks.row.row__cell
*/

/*
row__item

Элемент для создания частей раскладки. По умолчанию растягивается по ширине контента.

Размеры и отступы задаются с помощью утилит.

Markup:
<div class="row">
	<div class="test-row row__cell W2gs_sm W3gs_md">
		<p>Some text</p>
	</div>
</div>

Styleguide: core-blocks.row.row__item
*/

.row {
	position: relative;
	display: block;
	margin: 0px;
	padding: 0px;
	font-size: 0px;
	list-style: none;
	counter-reset: mlu-row-item;
}

.row__col,
.row__cell,
.row__item {
	position: relative;
	display: inline-block;
	max-width: 100%;
	box-sizing: border-box;
	font-size: 16px;
	font-size: 1rem;
	text-align: left;
	vertical-align: top;
	direction: ltr;
}

.row__col.row,
.row__cell.row,
.row__item.row {
	font-size: 0px;
}

.row__col > :first-child:not([class]),
.row__cell > :first-child:not([class]),
.row__item > :first-child:not([class]) {
	margin-top: 0px;
}

.row__col > :last-child:not([class]),
.row__cell > :last-child:not([class]),
.row__item > :last-child:not([class]) {
	margin-bottom: 0px;
}

.row__col {
	width: 97%;
	width: calc(100% - 24px);
	margin: 0 1.5% 24px;
	margin: 0 calc(12px) 24px;
}

.row__col.row {
	margin-bottom: 0px;
}

.row__cell {
	width: 100%;
	padding: 0px 1.5%;
	padding: 0px 12px;
}

/*
Wrapper

Блок-контейнер для основного содержимого страницы. Максимальная ширина по умолчанию \- 1200px. У контейнера есть поля, чтобы контент не прилипал на маленьких экранах. На широких экранах контейнер располагается по центру

Markup:
<div class="wrapper">
	<h1>Simple text</h1>
</div>

Styleguide: core-blocks.wrapper
*/

/*
wrapper__row

Элемент, который накладывает левый и правый отступы у крайних колонок на поля блока wrapper.
Такое поведение нужно, чтобы в раскладке не возникало двойных полей. Этот элемент опционален, потому что в разных ситуациях может понадобиться разное поведение полей.

Markup:
<div class="wrapper">
	<h2>Some cols</h2>
	<div class="row wrapper__row">
</div>
</div>

Styleguide: core-blocks.wrapper.wrapper__row
*/

.wrapper {
	display: block;
	max-width: 1224px;
	box-sizing: border-box;
	margin: auto;
	padding: 0px 1.5%;
	padding: 0px calc(12px);
}

.wrapper__row {
	margin-right: -1.5%;
	margin-left: -1.5%;
	margin-right: calc(-12px);
	margin-left: calc(-12px);
}

/*
Ratio-block

Блок для создания контейнеров, с пропорциональными шириной и высотой. По умолчанию пропорции 16:9

Markup:
<div class="ratio-block W2gc_md">
	<div class="ratio-block__content">
		<!-- Content here -->
	</div>
</div>

Styleguide: core-blocks.ratio-block
*/

/*
ratio-block__content

Элемент для вставки содержимого, которое будет пропорционально менять размеры.

Markup:
<div class="ratio-block W3gc_md">
	<div class="ratio-block__content">
		<p>Some more text [12:41:28] Starting 'style'... [12:41:29] mlut.min.css 2699 B (gzipped) [12:41:29] Finished 'style' after 205 ms </p>
	</div>
</div>

Styleguide: core-blocks.ratio-block.ratio-block__content
*/

.ratio-block {
	position: relative;
}

.ratio-block:before {
	display: block;
	width: 100%;
	padding-bottom: 56.25%;
	content: "";
}

.ratio-block__content {
	position: absolute;
	top: 0px;
	max-width: 100%;
	max-height: 100%;
}

/*
Btn

Блок для создания кнопок. Нормализует стили. Оформление задается с помощью модификаторов и утилит.

Markup:
<a class="btn btn--common W3gs_md" href="#">Login</a>

Styleguide: core-blocks.btn
*/

.btn {
	display: inline-block;
	box-sizing: border-box;
	font-family: inherit;
	font-size: 1rem;
	line-height: normal;
	text-align: center;
	text-decoration: none;
	vertical-align: top;
	border: 0;
	cursor: pointer;
}

/*
Input

Блок для создания полей ввода. Нормализует стили. Оформление задается с помощью модификаторов и утилит.

Markup:
<p class="W3gc_md">
	<input class="input input--common" name="" type="text" value="Some text"/>
</p>

Styleguide: core-blocks.input
*/

.input {
	display: inline-block;
	box-sizing: border-box;
	font: inherit;
	border: none;
}

/*===DESIGN-BLOCKS===*/

/*===CORE-UTILS===*/

/*
D

D \- display. Utility sets the display type of component.

Markup:
<div class="test-content W5gc_md">
	<h3 class="D-ib_sm">Title</h3>
	<p class="D-n_xl">Hidden content</p>
</div>

Styleguide: core-utils.d
*/

/*
mD

mD is used for for setting the display type with additional parameters.

Markup:
<div class="row mD-f">
	<div class="test-content row__col W2gc_sm W3gc_md">
		<h3>W2gc_sm W3gc_md</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-utils.d.md
*/

.D {
	display: block;
}

.D-tb {
	display: table;
}

.D-tbfg {
	display: table-footer-group;
}

.D-f {
	display: flex;
}

.D-if {
	display: inline-flex;
}

.D-n {
	display: none;
}

.mD-f {
	display: flex;
	flex-wrap: wrap;
}

.mD-if {
	display: inline-flex;
	flex-wrap: wrap;
}

/*
Flex

A group of utilities for managing flex-containers and flex-elements. Custom flex utilities are needed to manage standard [row layouts](section-core-blocks.html#kssref-core-blocks-row) and their elements.

Styleguide: core-utils.flex
*/

/*
mAs

mAs \- my align self. Utility for componont vertical alignment.

Markup:
<div class="row">
	<div class="test-content row__col W2gc_sm W3gc_md mAs-fe">
		<h3>W2gc_sm W3gc_md</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-utils.flex.mas
*/

/*
mJc

mJc \- my justify content. Utility for horizontal alignment of layout items and text.

Markup:
<div class="row mJc-c">
	<div class="test-content row__col W2gc_sm W3gc_md">
		<h3>Centered</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-utils.flex.mjc
*/

/*
mAi

mAi \- my align items. Utility for vertical alignment of layout items.

Markup:
<div class="row mAi-fe">
	<div class="test-content row__col W2gc_sm W3gc_md">
		<h3>Bottom</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-utils.flex.mai
*/

.Fxd-c {
	flex-direction: column;
}

.Fxg1 {
	flex-grow: 1;
}

.Fxsh0 {
	flex-shrink: 0;
}

.Fxw-wr {
	flex-wrap: wrap-reverse;
}

.Fxw-w {
	flex-wrap: wrap;
}

.As-s {
	align-self: stretch;
}

.As-fs {
	align-self: flex-start;
}

.As-c {
	align-self: center;
}

.As-fe {
	align-self: flex-end;
}

.mAs-c {
	align-self: center;
	vertical-align: middle;
}

.mAs-fe {
	align-self: flex-end;
	vertical-align: bottom;
}

.Jc-fe {
	justify-content: flex-end;
}

.Jc-c {
	justify-content: center;
}

.Jc-sa {
	justify-content: space-around;
}

.Jc-sb {
	justify-content: space-between;
}

.mJc-c {
	justify-content: center;
	text-align: center;
}

.mJc-fe {
	justify-content: flex-end;
	text-align: right;
}

.Ai-fs {
	align-items: flex-start;
}

.Ai-fe {
	align-items: flex-end;
}

.Ai-c {
	align-items: center;
}

.mAi-c {
	align-items: center;
}

.mAi-c > * {
	vertical-align: middle;
}

.mAi-fe {
	align-items: flex-end;
}

.mAi-fe > * {
	vertical-align: bottom;
}

/*
W

W \- width. This utility sets component width.

Markup:
<div class="test-content W2gc_sm W5gc_md">
	<h3>Title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.w
*/

.W-card {
	max-width: 288px;
}

.Maw100p {
	max-width: 100%;
}

.W-a {
	width: auto;
}

.W1gc {
	width: 47%;
	width: calc(50% - 24px);
}

.W2gc {
	width: 97%;
	width: calc(100% - 24px);
}

.W50p {
	width: 50%;
}

.W100p {
	width: 100%;
}

/*
Margin

Group of utilities that sets margin for component.

Styleguide: core-utils.margin
*/

/*
Ml

Ml \- margin left. Utility sets left margin.

Markup:
<div class="test-content Ml3gc_md">
	<h3>Container</h3>
	<p>With margin left</p>
</div>

Styleguide: core-utils.margin.ml
*/

/*
Mx

Mx \- margin on X axis. Utility sets left and right margin.

Markup:
<div class="test-content W3gc_sm Mx-a">
	<h3>Title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.margin.mx
*/

/*
Mt

Mt \- margin top. Utility sets top margin.

Markup:
<div class="test-content W3gc_md">
	<h3>Title</h3>
	<p class="Mt3gg">text</p>
</div>

Styleguide: core-utils.margin.mt
*/

/*
Mb

Mb \- margin bottom. Utility sets bottom margin.

Markup:
<div class="test-content W3gc_md">
	<h3>Title</h3>
	<p class="Mb4gg">text</p>
	<p>after indent</p>
</div>

Styleguide: core-utils.margin.mb
*/

.M0 {
	margin: 0px;
}

.M-a {
	margin: auto;
}

.Ml-a {
	margin-left: auto;
}

.Mx-a {
	margin-left: auto;
	margin-right: auto;
}

.Mt4gg {
	margin-top: 3rem;
}

.Mb4gg {
	margin-bottom: 3rem;
}

.Mt3gg {
	margin-top: 2.25rem;
}

.Mb3gg {
	margin-bottom: 2.25rem;
}

.Mt2gg {
	margin-top: 1.5rem;
}

.Mb2gg {
	margin-bottom: 1.5rem;
}

.Mb1gg {
	margin-bottom: 0.75rem;
}

.Mb-2gg {
	margin-bottom: -24px;
}

.Ml-1gg {
	margin-left: -12px;
}

.Ml1gg {
	margin-left: 12px;
}

/*
Padding

Group of utilities that sets padding for component.

Styleguide: core-utils.padding
*/

/*
P

P \- padding. Sets padding from all sides: top, right, bottom and left.

Markup:
<div class="test-content W2gc_sm W5gc_md P0">
	<h3>Title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.padding.p
*/

/*
Px

Px \- padding on X axis. Sets left and right padding.

Markup:
<div class="Px1gg W2gc_sm W3gc_md">
	<h3>Title</h3>
	<p>[Browsersync] 2 files changed (mlut.min.css.map, mlut.min.css) [12:21:49] Finished 'style' after 212 ms Some text</p>
</div>

Styleguide: core-utils.padding.px
*/

.P0 {
	padding: 0px;
}

.P8 {
	padding: 0.5em 8px;
}

/*
Float

Group of utilities for work with float.

Styleguide: core-utils.float
*/

/*
Fl

Fl \- float. Sets float to component.

Markup:
<div class="test-content W2gc_sm mCl">
	<h3 class="Fl">Title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.float.fl
*/

/*
mCl

mCl is clearfix utility.

Markup:
<div class="test-content W2gc_sm mCl">
	<h3 class="Fl">Title</h3>
	<p class="Fl-r">Some text</p>
</div>

Styleguide: core-utils.float.mcl
*/

.Fl {
	float: left;
}

.Fl-r {
	float: right;
}

.mCl:after {
	display: table;
	clear: both;
	content: "";
}

/*
Ov

Ov \- overflow. Sets component overflow.

Markup:
<div class="test-content W2gc_sm W5gc_md">
	<h3>Title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.ov
*/

.Ov {
	overflow: hidden;
}

.Ov-a {
	overflow: auto;
}

/*
Text

Group of utilities that manage the display of text.

Styleguide: core-utils.text
*/

/*
Dir

Dir \- direction. Sets direction of text and order items in layout.

Markup:
<div class="row Dir-r">
	<div class="test-content row__col W2gc_sm W3gc_md">
		<h3>Rtl</h3>
		<p>Some text</p>
	</div>
</div>

Styleguide: core-utils.text.dir
*/

/*
mFz

mFz \- my font size. Sets font size with additional parameters.

Markup:
<div class="test-content W2gc_sm W5gc_md">
	<h3>Hidden text here</h3>
	<p class="mFz0">Some text</p>
</div>

Styleguide: core-utils.text.mfz
*/

/*
mTov

mTov \- my text overflow. Removes line breaks in the text and displays ellipsis at the end of the line if the text does not fit in the container.

Markup:
<div class="test-content W2gc_sm W3gc_md">
	<h3 class="Maw100p mTov">super super long long title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.text.mtov
*/

.F-i {
	font: inherit;
}

.C-i {
	color: inherit;
}

.Ta-c {
	text-align: center;
}

.Ta-l {
	text-align: left;
}

.Ta-r {
	text-align: right;
}

.Dir-r {
	direction: rtl;
}

.mFz0 {
	overflow: hidden;
	color: transparent;
	text-indent: 120%;
	white-space: nowrap;
	font-size: 0px;
}

.mFz0::-moz-selection {
	color: transparent;
}

.mFz0::selection {
	color: transparent;
}

.mTov {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/*
mV

mV \- my visibility. Shows and hides component with additional parameters.

Markup:
<div class="test-content W2gc_sm W4gc_md">
	<h3 class="mV-vh">Visually hidden title</h3>
	<p>Some text</p>
</div>

Styleguide: core-utils.mv
*/

.mV-vh {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0px;
	overflow: hidden;
	white-space: nowrap;
	border: 0px;
	clip: rect(0 0 0 0);
}

/*===DESIGN-UTILS===*/

@media (min-width: 520px) {
	.D-n_sm {
		display: none;
	}

	.D_sm {
		display: block;
	}

	.D-ib_sm {
		display: inline-block;
	}

	.D-f_sm {
		display: flex;
	}

	.D-if_sm {
		display: inline-flex;
	}

	.mJc-fs_sm {
		justify-content: flex-start;
		text-align: left;
	}

	.mJc-c_sm {
		justify-content: center;
		text-align: center;
	}

	.mJc-fe_sm {
		justify-content: flex-end;
		text-align: right;
	}

	.mJc-sa_sm {
		justify-content: space-around;
		text-align: center;
	}

	.mJc-sb_sm {
		justify-content: space-between;
		text-align: center;
	}

	.W-a_sm {
		width: auto;
	}

	.W1gc_sm {
		width: 22%;
		width: calc(25% - 24px);
	}

	.W1gs_sm {
		width: 25%;
	}

	.W2gc_sm {
		width: 47%;
		width: calc(50% - 24px);
	}

	.W2gs_sm {
		width: 50%;
	}

	.W3gc_sm {
		width: 72%;
		width: calc(75% - 24px);
	}

	.W3gs_sm {
		width: 75%;
	}

	.W4gc_sm {
		width: 97%;
		width: calc(100% - 24px);
	}

	.W4gs_sm {
		width: 100%;
	}

	.Ml-a_sm {
		margin-left: auto;
	}

	.Mx-a_sm {
		margin-left: auto;
		margin-right: auto;
	}

	.Mx1gg_sm {
		margin-left: 12px;
		margin-right: 12px;
	}

	.Mx0_sm {
		margin-left: 0;
		margin-right: 0;
	}
}

@media (min-width: 760px) {
	.D-n_md {
		display: none;
	}

	.D_md {
		display: block;
	}

	.D-ib_md {
		display: inline-block;
	}

	.D-f_md {
		display: flex;
	}

	.D-if_md {
		display: inline-flex;
	}

	.mJc-fs_md {
		justify-content: flex-start;
		text-align: left;
	}

	.mJc-c_md {
		justify-content: center;
		text-align: center;
	}

	.mJc-fe_md {
		justify-content: flex-end;
		text-align: right;
	}

	.mJc-sa_md {
		justify-content: space-around;
		text-align: center;
	}

	.mJc-sb_md {
		justify-content: space-between;
		text-align: center;
	}

	.W-a_md {
		width: auto;
	}

	.W1gc_md {
		width: calc(8.333% - 24px);
	}

	.W1gs_md {
		width: 8.333%;
	}

	.Ml1gs_md {
		margin-left: 8.333%;
	}

	.Ml1gc_md {
		margin-left: calc(8.333% + 12px);
	}

	.W2gc_md {
		width: calc(16.666% - 24px);
	}

	.W2gs_md {
		width: 16.666%;
	}

	.Ml2gs_md {
		margin-left: 16.666%;
	}

	.Ml2gc_md {
		margin-left: calc(16.666% + 12px);
	}

	.W3gc_md {
		width: calc(25% - 24px);
	}

	.W3gs_md {
		width: 25%;
	}

	.Ml3gs_md {
		margin-left: 25%;
	}

	.Ml3gc_md {
		margin-left: calc(25% + 12px);
	}

	.W4gc_md {
		width: calc(33.333% - 24px);
	}

	.W4gs_md {
		width: 33.333%;
	}

	.Ml4gs_md {
		margin-left: 33.333%;
	}

	.Ml4gc_md {
		margin-left: calc(33.333% + 12px);
	}

	.W5gc_md {
		width: calc(41.666% - 24px);
	}

	.W5gs_md {
		width: 41.666%;
	}

	.Ml5gs_md {
		margin-left: 41.666%;
	}

	.Ml5gc_md {
		margin-left: calc(41.666% + 12px);
	}

	.W6gc_md {
		width: calc(50% - 24px);
	}

	.W6gs_md {
		width: 50%;
	}

	.Ml6gs_md {
		margin-left: 50%;
	}

	.Ml6gc_md {
		margin-left: calc(50% + 12px);
	}

	.W7gc_md {
		width: calc(58.333% - 24px);
	}

	.W7gs_md {
		width: 58.333%;
	}

	.Ml7gs_md {
		margin-left: 58.333%;
	}

	.Ml7gc_md {
		margin-left: calc(58.333% + 12px);
	}

	.W8gc_md {
		width: calc(66.666% - 24px);
	}

	.W8gs_md {
		width: 66.666%;
	}

	.Ml8gs_md {
		margin-left: 66.666%;
	}

	.Ml8gc_md {
		margin-left: calc(66.666% + 12px);
	}

	.W9gc_md {
		width: calc(75% - 24px);
	}

	.W9gs_md {
		width: 75%;
	}

	.Ml9gs_md {
		margin-left: 75%;
	}

	.Ml9gc_md {
		margin-left: calc(75% + 12px);
	}

	.W10gc_md {
		width: calc(83.333% - 24px);
	}

	.W10gs_md {
		width: 83.333%;
	}

	.Ml10gs_md {
		margin-left: 83.333%;
	}

	.Ml10gc_md {
		margin-left: calc(83.333% + 12px);
	}

	.W11gc_md {
		width: calc(91.666% - 24px);
	}

	.W11gs_md {
		width: 91.666%;
	}

	.W12gc_md {
		width: calc(100% - 24px);
	}

	.W12gs_md {
		width: 100%;
	}

	.Ml-a_md {
		margin-left: auto;
	}

	.Mx-a_md {
		margin-left: auto;
		margin-right: auto;
	}

	.Mx1gg_md {
		margin-left: 12px;
		margin-right: 12px;
	}

	.Mx0_md {
		margin-left: 0;
		margin-right: 0;
	}
}

@media (min-width: 960px) {
	.row__col {
		margin-left: calc(16px);
		margin-right: calc(16px);
	}

	.row__col {
		margin-bottom: 32px;
	}

	.row__cell {
		padding-left: 16px;
		padding-right: 16px;
	}

	.wrapper {
		padding-left: calc(16px);
		padding-right: calc(16px);
	}

	.wrapper {
		max-width: 1232px;
	}

	.wrapper__row {
		margin-left: calc(-16px);
		margin-right: calc(-16px);
	}

	.D-n_lg {
		display: none;
	}

	.D_lg {
		display: block;
	}

	.D-ib_lg {
		display: inline-block;
	}

	.D-f_lg {
		display: flex;
	}

	.D-if_lg {
		display: inline-flex;
	}

	.mJc-fs_lg {
		justify-content: flex-start;
		text-align: left;
	}

	.mJc-c_lg {
		justify-content: center;
		text-align: center;
	}

	.mJc-fe_lg {
		justify-content: flex-end;
		text-align: right;
	}

	.mJc-sa_lg {
		justify-content: space-around;
		text-align: center;
	}

	.mJc-sb_lg {
		justify-content: space-between;
		text-align: center;
	}

	.W1gc {
		width: calc(50% - 32px);
	}

	.W2gc {
		width: calc(100% - 32px);
	}

	.W-a_lg {
		width: auto;
	}

	.W1gc_sm {
		width: calc(25% - 32px);
	}

	.W2gc_sm {
		width: calc(50% - 32px);
	}

	.W3gc_sm {
		width: calc(75% - 32px);
	}

	.W4gc_sm {
		width: calc(100% - 32px);
	}

	.W1gc_md {
		width: calc(8.333% - 32px);
	}

	.Ml1gc_md {
		margin-left: calc(8.333% + 16px);
	}

	.W2gc_md {
		width: calc(16.666% - 32px);
	}

	.Ml2gc_md {
		margin-left: calc(16.666% + 16px);
	}

	.W3gc_md {
		width: calc(25% - 32px);
	}

	.Ml3gc_md {
		margin-left: calc(25% + 16px);
	}

	.W4gc_md {
		width: calc(33.333% - 32px);
	}

	.Ml4gc_md {
		margin-left: calc(33.333% + 16px);
	}

	.W5gc_md {
		width: calc(41.666% - 32px);
	}

	.Ml5gc_md {
		margin-left: calc(41.666% + 16px);
	}

	.W6gc_md {
		width: calc(50% - 32px);
	}

	.Ml6gc_md {
		margin-left: calc(50% + 16px);
	}

	.W7gc_md {
		width: calc(58.333% - 32px);
	}

	.Ml7gc_md {
		margin-left: calc(58.333% + 16px);
	}

	.W8gc_md {
		width: calc(66.666% - 32px);
	}

	.Ml8gc_md {
		margin-left: calc(66.666% + 16px);
	}

	.W9gc_md {
		width: calc(75% - 32px);
	}

	.Ml9gc_md {
		margin-left: calc(75% + 16px);
	}

	.W10gc_md {
		width: calc(83.333% - 32px);
	}

	.Ml10gc_md {
		margin-left: calc(83.333% + 16px);
	}

	.W11gc_md {
		width: calc(91.666% - 32px);
	}

	.W12gc_md {
		width: calc(100% - 32px);
	}

	.W1gc_lg {
		width: calc(8.333% - 32px);
	}

	.W1gs_lg {
		width: 8.333%;
	}

	.Ml1gs_lg {
		margin-left: 8.333%;
	}

	.Ml1gc_lg {
		margin-left: calc(8.333% + 16px);
	}

	.W2gc_lg {
		width: calc(16.666% - 32px);
	}

	.W2gs_lg {
		width: 16.666%;
	}

	.Ml2gs_lg {
		margin-left: 16.666%;
	}

	.Ml2gc_lg {
		margin-left: calc(16.666% + 16px);
	}

	.W3gc_lg {
		width: calc(25% - 32px);
	}

	.W3gs_lg {
		width: 25%;
	}

	.Ml3gs_lg {
		margin-left: 25%;
	}

	.Ml3gc_lg {
		margin-left: calc(25% + 16px);
	}

	.W4gc_lg {
		width: calc(33.333% - 32px);
	}

	.W4gs_lg {
		width: 33.333%;
	}

	.Ml4gs_lg {
		margin-left: 33.333%;
	}

	.Ml4gc_lg {
		margin-left: calc(33.333% + 16px);
	}

	.W5gc_lg {
		width: calc(41.666% - 32px);
	}

	.W5gs_lg {
		width: 41.666%;
	}

	.Ml5gs_lg {
		margin-left: 41.666%;
	}

	.Ml5gc_lg {
		margin-left: calc(41.666% + 16px);
	}

	.W6gc_lg {
		width: calc(50% - 32px);
	}

	.W6gs_lg {
		width: 50%;
	}

	.Ml6gs_lg {
		margin-left: 50%;
	}

	.Ml6gc_lg {
		margin-left: calc(50% + 16px);
	}

	.W7gc_lg {
		width: calc(58.333% - 32px);
	}

	.W7gs_lg {
		width: 58.333%;
	}

	.Ml7gs_lg {
		margin-left: 58.333%;
	}

	.Ml7gc_lg {
		margin-left: calc(58.333% + 16px);
	}

	.W8gc_lg {
		width: calc(66.666% - 32px);
	}

	.W8gs_lg {
		width: 66.666%;
	}

	.Ml8gs_lg {
		margin-left: 66.666%;
	}

	.Ml8gc_lg {
		margin-left: calc(66.666% + 16px);
	}

	.W9gc_lg {
		width: calc(75% - 32px);
	}

	.W9gs_lg {
		width: 75%;
	}

	.Ml9gs_lg {
		margin-left: 75%;
	}

	.Ml9gc_lg {
		margin-left: calc(75% + 16px);
	}

	.W10gc_lg {
		width: calc(83.333% - 32px);
	}

	.W10gs_lg {
		width: 83.333%;
	}

	.Ml10gs_lg {
		margin-left: 83.333%;
	}

	.Ml10gc_lg {
		margin-left: calc(83.333% + 16px);
	}

	.W11gc_lg {
		width: calc(91.666% - 32px);
	}

	.W11gs_lg {
		width: 91.666%;
	}

	.W12gc_lg {
		width: calc(100% - 32px);
	}

	.W12gs_lg {
		width: 100%;
	}

	.Ml0gc_lg {
		margin-left: 16px;
	}

	.Ml0_lg {
		margin-left: 0;
	}

	.Mt4gg {
		margin-top: 4rem;
	}

	.Mb4gg {
		margin-bottom: 4rem;
	}

	.Mt3gg {
		margin-top: 3rem;
	}

	.Mb3gg {
		margin-bottom: 3rem;
	}

	.Mt2gg {
		margin-top: 2rem;
	}

	.Mb2gg {
		margin-bottom: 2rem;
	}

	.Mb1gg {
		margin-bottom: 1rem;
	}

	.Mb-2gg {
		margin-bottom: -32px;
	}

	.Ml-1gg {
		margin-left: -16px;
	}

	.Ml1gg {
		margin-left: 16px;
	}

	.Ml-a_lg {
		margin-left: auto;
	}

	.Mx-a_lg {
		margin-left: auto;
		margin-right: auto;
	}

	.Mx1gg_lg {
		margin-left: 16px;
		margin-right: 16px;
	}

	.Mx0_lg {
		margin-left: 0;
		margin-right: 0;
	}
}

@media (min-width: 1168px) {
	.D-n_xl {
		display: none;
	}

	.D_xl {
		display: block;
	}

	.D-ib_xl {
		display: inline-block;
	}

	.D-f_xl {
		display: flex;
	}

	.D-if_xl {
		display: inline-flex;
	}

	.mJc-fs_xl {
		justify-content: flex-start;
		text-align: left;
	}

	.mJc-c_xl {
		justify-content: center;
		text-align: center;
	}

	.mJc-fe_xl {
		justify-content: flex-end;
		text-align: right;
	}

	.mJc-sa_xl {
		justify-content: space-around;
		text-align: center;
	}

	.mJc-sb_xl {
		justify-content: space-between;
		text-align: center;
	}

	.W-a_xl {
		width: auto;
	}

	.W1gc_xl {
		width: calc(8.333% - 32px);
	}

	.W1gs_xl {
		width: 8.333%;
	}

	.Ml1gs_xl {
		margin-left: 8.333%;
	}

	.Ml1gc_xl {
		margin-left: calc(8.333% + 16px);
	}

	.W2gc_xl {
		width: calc(16.666% - 32px);
	}

	.W2gs_xl {
		width: 16.666%;
	}

	.Ml2gs_xl {
		margin-left: 16.666%;
	}

	.Ml2gc_xl {
		margin-left: calc(16.666% + 16px);
	}

	.W3gc_xl {
		width: calc(25% - 32px);
	}

	.W3gs_xl {
		width: 25%;
	}

	.Ml3gs_xl {
		margin-left: 25%;
	}

	.Ml3gc_xl {
		margin-left: calc(25% + 16px);
	}

	.W4gc_xl {
		width: calc(33.333% - 32px);
	}

	.W4gs_xl {
		width: 33.333%;
	}

	.Ml4gs_xl {
		margin-left: 33.333%;
	}

	.Ml4gc_xl {
		margin-left: calc(33.333% + 16px);
	}

	.W5gc_xl {
		width: calc(41.666% - 32px);
	}

	.W5gs_xl {
		width: 41.666%;
	}

	.Ml5gs_xl {
		margin-left: 41.666%;
	}

	.Ml5gc_xl {
		margin-left: calc(41.666% + 16px);
	}

	.W6gc_xl {
		width: calc(50% - 32px);
	}

	.W6gs_xl {
		width: 50%;
	}

	.Ml6gs_xl {
		margin-left: 50%;
	}

	.Ml6gc_xl {
		margin-left: calc(50% + 16px);
	}

	.W7gc_xl {
		width: calc(58.333% - 32px);
	}

	.W7gs_xl {
		width: 58.333%;
	}

	.Ml7gs_xl {
		margin-left: 58.333%;
	}

	.Ml7gc_xl {
		margin-left: calc(58.333% + 16px);
	}

	.W8gc_xl {
		width: calc(66.666% - 32px);
	}

	.W8gs_xl {
		width: 66.666%;
	}

	.Ml8gs_xl {
		margin-left: 66.666%;
	}

	.Ml8gc_xl {
		margin-left: calc(66.666% + 16px);
	}

	.W9gc_xl {
		width: calc(75% - 32px);
	}

	.W9gs_xl {
		width: 75%;
	}

	.Ml9gs_xl {
		margin-left: 75%;
	}

	.Ml9gc_xl {
		margin-left: calc(75% + 16px);
	}

	.W10gc_xl {
		width: calc(83.333% - 32px);
	}

	.W10gs_xl {
		width: 83.333%;
	}

	.Ml10gs_xl {
		margin-left: 83.333%;
	}

	.Ml10gc_xl {
		margin-left: calc(83.333% + 16px);
	}

	.W11gc_xl {
		width: calc(91.666% - 32px);
	}

	.W11gs_xl {
		width: 91.666%;
	}

	.W12gc_xl {
		width: calc(100% - 32px);
	}

	.W12gs_xl {
		width: 100%;
	}

	.Ml0gc_xl {
		margin-left: 16px;
	}

	.Ml0_xl {
		margin-left: 0;
	}

	.Ml-a_xl {
		margin-left: auto;
	}

	.Mx-a_xl {
		margin-left: auto;
		margin-right: auto;
	}

	.Mx1gg_xl {
		margin-left: 16px;
		margin-right: 16px;
	}

	.Mx0_xl {
		margin-left: 0;
		margin-right: 0;
	}

	.Dir-r_xl {
		direction: rtl;
	}
}

@media (min-width: 520px) and (max-width: 759px) {
	.Dir-r_sm {
		direction: rtl;
	}
}

@media (min-width: 760px) and (max-width: 959px) {
	.Dir-r_md {
		direction: rtl;
	}
}

@media (min-width: 960px) and (max-width: 1167px) {
	.Dir-r_lg {
		direction: rtl;
	}
}