@use 'sass:map';
@use '../../tools/settings' as ml;

/*
Flex

A group of utilities for managing flex-containers and flex-elements.

Most of custom flex utilities **turned off** and available with flag [mlu.$flag-flex-pe](section-sass-tools.html#kssref-sass-tools-settings-flags). They are needed to manage [row-layouts](section-core-blocks.html#kssref-core-blocks-row) and their elements.

* `Fxg1` \- flex-element occupies the remaining free space in the line.
* `Fxsh0`
* `Fx-i`
* `Ord-1..Ord2` \- sequence number for flex-element

Styleguide: core-utils.flex
*/

/*
Fxd

Flex direction.

* `Fxd-r` \- row. Only *Responsive*

Fxd-rr - row-reverse. *Responsive*
Fxd-c - column
Fxd-cr - column-reverse

Markup: ../../../docs/examples/core-utils/flex/fxd.hbs

Styleguide: core-utils.flex.fxd
*/

/*
Fxw

Flex wrap.

wr - wrap-reverse
w - wrap. *Responsive*.
n - nowrap. only *Responsive*.

Styleguide: core-utils.flex.fxw
*/

/*
Jc

Justify content. All values are *Responsive*. `fs` only *Responsive*.

Jc-sa - space-around
Jc-sb - space-between
Jc-fe_xl - flex-end on `xl` breakpoint

Markup: ../../../docs/examples/core-utils/flex/jc.hbs

Styleguide: core-utils.flex.jc
*/

/*
As

Align self. Available all values.

Markup: ../../../docs/examples/core-utils/flex/as.html

Styleguide: core-utils.flex.as
*/

/*
Ai

Align items. All values are *Responsive*. `s` only *Responsive*.

Ai-fs - top
Ai-c - center
Ai-fe - bottom
Ai-b - text baseline

Markup: ../../../docs/examples/core-utils/flex/ai.hbs

Styleguide: core-utils.flex.ai
*/

/*
Ac

Align content.

Ac-fs - top
Ac-c - center
Ac-fe - bottom
Ac-sa - space-around
Ac-sb - space-between

Markup: ../../../docs/examples/core-utils/flex/ac.hbs

Styleguide: core-utils.flex.ac
*/

ml.$utils-map: map.merge(
	ml.$utils-map,
	(
		ml.$kBpAll + '_Fxd': ('rr', '#{ml.$kBpAll} #{ml.$kArOl}_r', 'c', 'cr'),
		'Fxg': (1),
		'Fxsh': (0),
		'Fx': ('ih'),
		ml.$kBpAll + '_Fxw': ('wr', 'w', 'n'),
		'Ac': ('fs', 'fe', 'c', 'sa', 'sb', 'se'),
		ml.$kBpAll + '_As': (
			'fs', 'fe', 'c', 'b', 'a', '#{ml.$kBpAll} #{ml.$kArOl}_s'
		),
		ml.$kBpAll + '_Jc': (
			'#{ml.$kBpAll} #{ml.$kArOl}_fs', 'fe', 'c', 'sa', 'sb', 'se'
		),
		ml.$kBpAll + '_Ai': ('fs', 'fe', 'c', 'b', '#{ml.$kBpAll} #{ml.$kArOl}_s'),
		ml.$kBpAll + '_Ord': ([-1, 5],),
	)
);
