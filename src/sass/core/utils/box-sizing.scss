@use '../../tools' as mlu;

/*
Box sizing

Utilities for DOM nodes size management.

* `H100p`
* `H0`
* `Mih100vh`
* `Mih100p`
* `Bxz`
* `Fl` \- turn on wrapping text on the right.
* `Fl-r` \- turn on wrapping text on the left.

Styleguide: core-utils.bxz
*/

/*
Maw

Max-width.

fx0 - fixed width for cards. You can change it in utilities [settings](section-sass-tools.html#kssref-sass-tools-settings-utils).
100p - 100%
n - none

Styleguide: core-utils.bxz.maw
*/

/*
-Cl

Custom clear. It is clearfix utility. Use it with a container whose child DOM nodes have `Fl`.

Markup: ../../../docs/examples/core-utils/visual-formatting/-cl.html

Styleguide: core-utils.bxz.-cl
*/

/*
Ov

Controls content display in case of overflow

Ov - hidden.
Ov-a - auto. Adds a scrollbar if the content does not fit into the container.
Ov.Ovx-a - auto. Scrollbar on X axis.
Ov.Ovy-a - auto. Scrollbar on Y axis.

Markup: ../../../docs/examples/core-utils/visual-formatting/ov.hbs

Styleguide: core-utils.bxz.ov
*/

@include mlu.mk-util('Maw', (
	'-fx0': mlu.$Maw--fx0,
	'100p': 100%,
	'n': none,
));

@include mlu.mk-util('H', (
	'100p': 100%,
	0: 0,
));

@include mlu.mk-util('Mih', (
	'100p': 100%,
	100vh: 100vh,
));

.Bxz {
	box-sizing: border-box;
}

@include mlu.mk-util('Fl', (
	'': left,
	'r': right,
));

.-Cl {
	@include mlu.cCl;
}

@include mlu.mk-util('Ov', (
	'': hidden,
	'a': auto,
));

.Ovx-a {
	overflow-x: auto;
}

.Ovy-a {
	overflow-y: auto;
}

/*
W

Width. You can set width in the variable columns(`c`).

If you specify the width in grid units on one breakpoint, then the width is preserved on all subsequent breakpoints.

* `W-a` \- default DOM node width. Depends on DOM node [display type](#kssref-core-utils-bxz-d). *Responsive*.
* `W-i` \- inherit value from parent DOM node. *Responsive*.
* `W100p` \- for browsers which not support custom properties.
* `W1c..W4c` \- range of available width in variable columns on `xs` and `sm` breakpoints, because on `xs` and `sm`, grid has 4 columns. See grid options in [settings](section-sass-tools.html#kssref-sass-tools-settings-grid).
* `W1c..W12c` \- available width in `c` on all breakpoints, starting with `md`.

Markup: ../../../docs/examples/core-utils/box-sizing/w.html

Styleguide: core-utils.bxz.w
*/

@for $i from 1 through mlu.$grid-cols-xs {
	.W#{$i}c {
		@include mlu.W($i * 1c, $cols: mlu.$grid-cols-xs);
	}
}

// Generate grid utilities W and Ml on breakpoints
@each $key, $value in mlu.$grid-cols {
	@for $i from 1 through $value {
		.W#{$i}c_#{$key} {
			@include mlu.W($i * 1c, $key, $value);
		}

		// Offsets start generate from mlu.$bp-md and if offset flag turn on.
		// '$i < mlu.grid-cols-count($gtr-key) - 1' because
		// offset like 'Ml11c' makes no sense
		@if mlu.$flag-col-offset and
			mlu.bp($key) > mlu.bp(mlu.$bp-sm) and
			$i < $value - 1 {
			.Ml#{$i}c_#{$key} {
				@include mlu.Ml($i * 1c, $key, $value);
			}
		}
	}
}

@include mlu.mk-util('W', (
	'100p': 100%,
	'a_all': auto,
	'i_all': inherit,
));
