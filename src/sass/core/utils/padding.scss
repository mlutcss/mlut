/*
Padding

* `P0` \- clear all paddings.
* `P1su..P4su` \- creates padding all around.
* `P1gg`
* `Pt1gg..Pt2gg` \- works similarly [Mt1gg](#kssref-core-utils-margin)
* `Pb1gg..Pb2gg`

Styleguide: core-utils.padding
*/

/*
Px

Padding on X axis. Sets left and right padding.

* `Px1gg` \- *responsive*
* `Px2su..Px4su` \- with these utilities you can change the columns gutter. Use them with the appropriate [Mx utils](#kssref-core-utils-margin-mx) to remove double fields along the edges of the container.
* `Px0` - only *responsive*

Markup: ../../../docs/examples/core-utils/padding/px.html

Styleguide: core-utils.padding.px
*/

.P0 {
	padding: 0px;
}

@for $i from 1 through $mlu-P-range {
	.P#{$i}su {
		padding: ($mlu-su-rem * $i) ($mlu-su * $i);
	}
}

.P1gg {
	@include mlu-mk-gtr($type: "padding", $direct: "xy");
}

.Pt1gg {
	@include mlu-mk-gtr($mlu-gtr-sm-rem, "padding", $direct: "t");
}

.Pt2gg {
	@include mlu-mk-gtr($mlu-gtr-sm-rem, "padding", $direct: "t", $coef: 2);
}

.Pb1gg {
	@include mlu-mk-gtr($mlu-gtr-sm-rem, "padding", $direct: "b");
}

.Pb2gg {
	@include mlu-mk-gtr($mlu-gtr-sm-rem, "padding", $direct: "b", $coef: 2);
}

.Pl1gg {
	@include mlu-mk-gtr($type: "padding", $direct: "l");
}

.Px2su {
	padding-right: $mlu-su * 2;
	padding-left: $mlu-su * 2;
}

.Px3su {
	padding-right: $mlu-su * 3;
	padding-left: $mlu-su * 3;
}

.Px4su {
	padding-right: $mlu-su * 4;
	padding-left: $mlu-su * 4;
}

@include mlu-bp-all(".Px1gg") {
	@include mlu-mk-gtr($type: "padding");
}

@include mlu-bp-all(".Px0", 0) {
	padding-right: 0;
	padding-left: 0;
}
