/*
Padding

* `P0` \- clear all paddings.
* `P1su..P4su` \- creates padding all around.
* `P1gg`
* `Pt1gg..Pt2gg` \- works similarly [Mt1gg](#kssref-core-utils-margin)
* `Pb1gg..Pb2gg`

Styleguide: core-utils.padding
*/

/*
Px

Padding on X axis. Sets left and right padding.

* `Px1gg` \- *responsive*
* `Px2su..Px4su` \- with these utilities you can change the columns gutter. Use them with the appropriate [Mx utils](#kssref-core-utils-margin-mx) to remove double fields along the edges of the container.
* `Px0` - only *responsive*

Markup: ../../../docs/examples/core-utils/padding/px.html

Styleguide: core-utils.padding.px
*/

$mlu-P-map: (
	"xy0": 0,
);

@for $i from 1 through $mlu-P-range {
	$value: $i * 1su;
	$mlu-P-map: map-merge($mlu-P-map, ("xy" + $value: $value));
}

$mlu-P-map: map-merge($mlu-P-map,
(
	"xy1gg": 1gg,
	"t1gg": 1gg,
	"t2gg": 2gg,
	"b1gg": 1gg,
	"b2gg": 2gg,
	"l1gg": 1gg,
	"x2su": 2su,
	"x3su": 3su,
	"x4su": 4su,
	"x1gg_all": 1gg,
	"x0_bp": 0,
));

@include mlu-mk-P($mlu-P-map);
