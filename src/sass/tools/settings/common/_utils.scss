@use 'sass:map';
@use 'sass:list';
@use 'sass:string';

@use '../base' as ml;

$uv-css-var-prefix: ml.$css-var-prefix !default;

$utils-data: () !default;
$utils-data-ext: () !default;

$-css-wide-kw: (
	'i': inherit,
	'ini': initial,
	'rv': revert,
	'us': unset,
);

//stylelint-disable
$utils-db: (
	'utils': (
		'registry': (
			'-Gsc': ml.$var-grid-cols,
			'-Gsg': ml.$var-gg,
			'Pos': position,
			'-X': null,
			'-Y': null,
			'-Xy': null,
			'Z': (
				'properties': z-index,
				'value-type': 'unitless',
			),
			'D': display,
			'Fxd': flex-direction,
			'Fxw': flex-wrap,
			'Fxg': (
				'properties': flex-grow,
				'value-type': 'unitless',
			),
			'Fxsh': (
				'properties': flex-shrink,
				'value-type': 'unitless',
			),
			'Ac': align-content,
			'As': align-self,
			'Ai': align-items,
			'Jc': justify-content,
			'Ord': order,
			'Gd': grid,
			'Fl': float,
			'Bxz': box-sizing,
			'Maw': max-width,
			'Mih': min-height,
			'M': (
				'properties': margin,
				'directions': true,
			),
			'P': (
				'properties': padding,
				'directions': true,
			),
			'Ov': overflow,
			'C': (
				'properties': color,
				'range-generator': 'color',
				'value-type': 'color',
			),
			'F': font,
			'Fw': (
				'properties': font-weight,
				'value-type': 'unitless',
			),
			'Fz': (
				'properties': font-size,
				'default-unit': 'rem',
			),
			'Ff': font-family,
			'Fs': font-style,
			'Lh': (
				'properties': line-height,
				'value-type': 'unitless',
			),
			'Dir': direction,
			'Lts': letter-spacing,
			'Whs': white-space,
			'Ta': text-align,
			'Tt': text-transform,
			'Td': text-decoration,
			'Tsh': text-shadow,
			'Va': vertical-align,
			'Bgc': (
				'properties': background-color,
				'range-generator': 'color',
				'value-type': 'color',
			),
			'Bgr': background-repeat,
			'Bgp': background-position,
			'Bgsz': background-size,
			'Bga': background-attachment,
			'Ol': outline,
			'Bxsh': box-shadow,
			'Trf': transform,
			'V': visibility,
			'Cur': cursor,
			'Op': (
				'properties': opacity,
				'value-type': 'alpha',
			),
			'Bd': border,
			'Bdc': border-color,
			'Bds': border-style,
			'Bdw': border-width,
			'Bdrs': (
				'properties': border-radius,
				'multi-list-separator': ml.$tULs2,
			),
			'Trs': (
				'properties': transition,
				'value-type': 'abbr-kw',
			),
			'Anim': animation,
			'Rsz': resize,
		),
		'map': (),
	),

	'common': (
		'registry': (
			'H': height,
			'W': width,
			'Ar': aspect-ratio,
		),
		'keywords': (
			'css': $-css-wide-kw,
			'css-oft': map.merge(
				$-css-wide-kw,
				(
					'a': auto,
					'n': none,
				)
			),
			'colors': (
				't': transparent,
				'cc': currentColor,
			),
		),
	),
) !default;

$-common-registry: ();

@each $key, $value in map.get($utils-db, 'common', 'registry') {
	$-common-registry: map.set(
		$-common-registry,
		string.to-lower-case($key),
		$value
	);
}

$utils-db: map.set(
	$utils-db,
	'media',
	(
		'registry': map.deep-merge(
			$-common-registry,
			(
				'hv': hover,
				'ahv': any-hover,
				'pn': (
					'properties': pointer,
					'value-type': 'keyword',
					'keywords': (
						'c': coarse,
						'f': fine,
					),
				),
				'apn': (
					'properties': any-pointer,
					'value-type': 'keyword',
					'keywords': (
						'c': coarse,
						'f': fine,
					)
				),
				'cg': (
					'properties': color-gamut,
					'value-type': 'keyword',
					'keywords': (
						'p': p3,
						's': 'srgb',
						'r': rec2020,
					),
				),
				'dm': (
					'properties': display-mode,
					'value-type': 'keyword',
					'keywords': (
						'': fullscreen,
						's': standalone,
						'mu': minimal-ui,
						'b': browser,
					),
				),
				'fc': forced-colors,
				'ori': (
					'properties': orientation,
					'value-type': 'keyword',
					'keywords': (
						'': landscape,
						'p': portrait,
					),
				),
				'prfcs': (
					'properties': prefers-color-scheme,
					'value-type': 'keyword',
					'keywords': (
						'': dark,
						'l': light,
					),
				),
				'prfrm': prefers-reduced-motion,
				'mn': (
					'properties': monochrome,
					'value-type': 'unitless',
				),
				'gd': (
					'properties': grid,
					'value-type': 'unitless',
				),
				'c': (
					'properties': color,
					'value-type': 'unitless',
				),
				'rsl': (
					'properties': resolution,
					'value-type': 'resolution',
					'keywords': (
						'i': infinite,
					),
				),
			),
		),
	),
);

$utils-db: map.deep-merge($utils-db, $utils-data);
$utils-db: map.deep-merge($utils-db, $utils-data-ext);
$utils-db: map.merge(
	$utils-db,
	'utils',
	'registry',
	map.get($utils-db, 'common', 'registry')
);
