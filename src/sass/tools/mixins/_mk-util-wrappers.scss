//@use "../settings" as mlu;
//@use "../functions";
//@use "utils";
@use "forward-tools" as mlu;
@use "utils" as mutl;

// mk-util wrappers
//
// Mixins-wrappers over [mk-util](#kssref-sass-tools-mixins-mk_util) and [mk-util-directions](#kssref-sass-tools-mixins-mk_util_dir), in which the names of utilities and CSS properties are written. Only a map with values is required. All have the same parameters.
//
// The names of all mixins begin with `mk-` and end with the name of the utility they create:  `mk-Maw`, `mk-Fw` etc.
// The exception is `mk-Xy`, which creates [positioning](section-core-utils.html#kssref-core-utils-pos) utilities. 2 hyphens are written in the names of mixins for custom utilities: `mk--Gcc`. Mixins for groups of utilities with directions are marked separately.
//
// Mixins for common utilities:
// * Positioning: `Z`
// * Box-model: `W`, `Maw`, `Mih`
// * Typografy: `Fw`, `Fz`, `Ff`, `C`, `Lh`
// * Visual: `Bgc`, `Bdc`, `Bdw`, `Bdrs`, `Trf`, `Op`
//
// For custom utilities:
// * `-Gcc`
//
// For utils with directions:
// * `Xy`
// * `M`
// * `P`
// * `Bdxy`
//
// Example:
// ```scss
//$Bdc-map: (
//		"sc2": #333,
//		"gr0": #eee,
//);
//
//@include mk-Bdc($Bdc-map);
// ```
// CSS
// ```css
//.Bdc-sc2 {
//		border-color: #333;
//}
//
//.Bdc-gr0 {
//		border-color: #eee;
//}
// ```
//
// $map - map with utilities names values and CSS properties values.
// $bp = null - breakpoint on which utility values will be generated.
// $states = null - list of state names.
//
// Styleguide: sass-tools.mixins.utils.util_wrappers

@mixin mk-Xy($map, $bp: null, $states: null) {
	@include mutl.mk-util-directions($map, $bp: $bp, $states: $states);
}

@mixin mk-Z($map, $bp: null, $states: null) {
	@include mutl.mk-util("Z", "z-index", $map, $bp, $states);
}

@mixin mk-W($map, $bp: null, $states: null) {
	@include mutl.mk-util("W", "width", $map, $bp, $states);
}

@mixin mk-Maw($map, $bp: null, $states: null) {
	@include mutl.mk-util("Maw", "max-width", $map, $bp, $states);
}

@mixin mk-Mih($map, $bp: null, $states: null) {
	@include mutl.mk-util("Mih", "min-height", $map, $bp, $states);
}

@mixin mk-M($map, $bp: null, $states: null) {
	@include mutl.mk-util-directions($map, "M", "margin", $bp, $states);
}

@mixin mk-P($map, $bp: null, $states: null) {
	@include mutl.mk-util-directions($map, "P", "padding", $bp, $states);
}

@mixin mk-C($map, $bp: null, $states: null) {
	@include mutl.mk-util("C", "color", $map, $bp, $states);
}

@mixin mk-Lh($map, $bp: null, $states: null) {
	@include mutl.mk-util("Lh", "line-height", $map, $bp, $states);
}

@mixin mk-Fw($map, $bp: null, $states: null) {
	@include mutl.mk-util("Fw", "font-weight", $map, $bp, $states);
}

@mixin mk-Fz($map, $bp: null, $states: null) {
	@include mutl.mk-util("Fz", "font-size", $map, $bp, $states);
}

@mixin mk-Ff($map, $bp: null, $states: null) {
	@include mutl.mk-util("Ff", "font-family", $map, $bp, $states);
}

@mixin mk-Bgc($map, $bp: null, $states: null) {
	@include mutl.mk-util("Bgc", "background-color", $map, $bp, $states);
}

@mixin mk-Bdxy($map, $bp: null, $states: null) {
	@include mutl.mk-util-directions($map, "Bd", "border", $bp, $states);
}

@mixin mk-Bdc($map, $bp: null, $states: null) {
	@include mutl.mk-util("Bdc", "border-color", $map, $bp, $states);
}

@mixin mk-Bdw($map, $bp: null, $states: null) {
	@include mutl.mk-util("Bdw", "border-width", $map, $bp, $states);
}

@mixin mk-Bdrs($map, $bp: null, $states: null) {
	@include mutl.mk-util("Bdrs", "border-radius", $map, $bp, $states);
}

@mixin mk-Trf($map, $bp: null, $states: null) {
	@include mutl.mk-util("Trf", "transform", $map, $bp, $states);
}

@mixin mk-Op($map, $bp: null, $states: null) {
	@include mutl.mk-util("Op", "opacity", $map, $bp, $states);
}

@mixin mk--Gcc($map, $bp: null, $states: null) {
	@include mutl.mk-util("-Gcc", mlu.$var-grid-cols, $map, $bp, $states);
}
