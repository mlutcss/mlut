/*
Text

Group of utilities that manage the display of text.

* `Tt` \- UPPERCASE.
* `Tt-n` \- remove text transform.
* `C-i`
* `Lh-n` \- line-height normal.

Styleguide: core-utils.text
*/

/*
Ta

Text alignment.

initial - left.
c - center.
r - right.

Styleguide: core-utils.text.ta
*/

/*
Td

Text decoration.

initial - remove text decoration.
u - <u>underline</u>.
l - ~~strikethrough~~.

Styleguide: core-utils.text.td
*/

/*
Dir

Direction. Sets direction of text and order items in row-layout. When specifying a breakpoint, the utility *only* works on it.

Dir-r - right to left. *Responsive*.
Dir-r_md - only on md.

Markup: ../../../docs/examples/core-utils/text/dir.hbs

Styleguide: core-utils.text.dir
*/

/*
mTov

Modified text overflow. Removes line breaks in the text and displays ellipsis at the end of the line if the text does not fit in the container. DOM node with `mTov` should have a width limit.

Markup: ../../../docs/examples/core-utils/text/mtov.html

Styleguide: core-utils.text.mtov
*/

.Ta {
	text-align: left;
}

.Ta-c {
	text-align: center;
}

.Ta-r {
	text-align: right;
}

.Td {
	text-decoration: none;
}

.Td-u {
	text-decoration: underline;
}

.Td-l {
	text-decoration: line-through;
}

.Tt {
	text-transform: uppercase;
}

.Tt-n {
	text-transform: none;
}

.mTov {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.C-i {
	color: inherit;
}

.Lh-n {
	line-height: normal;
}

.Dir-r {
	direction: rtl;
}

@each $key, $value in $mlu-grid-cols {
	$mq: ($key, mlu-breakpoint-next($key));

	@if index($mlu-grid-cols, ($key $value)) == length($mlu-grid-cols) {
		$mq: $key;
	}

	@include mlu-bpm($mq...) {
		.Dir-r_#{$key} {
			direction: rtl;
		}
	}
}

@if $MLU-FLAG-EXTENDED {
	.Ta-j {
		text-align: justify;
	}

	.Td-o {
		text-decoration: overline;
	}
}
