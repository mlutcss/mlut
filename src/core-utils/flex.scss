/*
Flex

A group of utilities for managing flex-containers and flex-elements. Modified flex utilities are needed to manage [row-layouts](section-core-blocks.html#kssref-core-blocks-row) and their elements.

* `Fxd-c`
* `Fxg1` \- flex-element occupies the remaining free space in the line.
* `Fxsh0`
* `Fxw-wr`
* `Fxw-w`
* `As-s` \- stretches the flex-element to full height.
* `Jc` \- all values except `flex-start`.

Styleguide: core-utils.flex
*/

/*
Jc

Justify content. You can use it as additional horizontal alignment variants for row-layouts. Works only with flex-container. *Responsive*.

Jc-sa - space-around.
Jc-sb - space-between.
Jc-sa_xl - space-between on `xl` breakpoint.

Markup: ../../../docs/examples/core-utils/flex/jc.hbs

Styleguide: core-utils.flex.jc
*/

/*
mAs

Modified align self. Set `vertical-align` for common DOM nodes and `align-self` for flex-element.

Can be used to vertically align an element in row-layouts. Partially works without flex-container.

* `fs` \- top.
* `c` \- center.
* `fe` \- bottom.
* `b` \- text baseline.

Markup: ../../../docs/examples/core-utils/flex/mas.html

Styleguide: core-utils.flex.mas
*/

/*
mJc

Modified justify content. Combines [Ta](#kssref-core-utils-text-ta) and `Jc` utilities. Can be used to horizontal alignment with progressive enhancement for row-layouts. *Responsive*.

* `mJc-fs` \- left. *Only responsive*.

mJc-c - center.
mJc-fe - right.

Markup: ../../../docs/examples/core-utils/flex/mjc.hbs

Styleguide: core-utils.flex.mjc
*/

/*
mAi

Modified align items. Set `vertical-align` for child DOM nodes and `align-items` for flex-container.

Can be used to vertically align an elements in row-layouts. Partially works without flex-container.

mAi-fs - top
mAi-c - center
mAi-fe - bottom
mAi-b - text baseline

Markup: ../../../docs/examples/core-utils/flex/mai.hbs

Styleguide: core-utils.flex.mai
*/

.Fxd-c {
	flex-direction: column;
}

.Fxg1 {
	flex-grow: 1;
}

.Fxsh0 {
	flex-shrink: 0;
}

.Fxw-wr {
	flex-wrap: wrap-reverse;
}

.Fxw-w {
	flex-wrap: wrap;
}

.As-s {
	align-self: stretch;
}

.mAs-b {
	align-self: baseline;
	vertical-align: baseline;
}

.mAs-fs {
	align-self: flex-start;
	vertical-align: top;
}

.mAs-c {
	align-self: center;
	vertical-align: middle;
}

.mAs-fe {
	align-self: flex-end;
	vertical-align: bottom;
}

.Jc-fe {
	justify-content: flex-end;
}

.Jc-c {
	justify-content: center;
}

.Jc-sa {
	justify-content: space-around;
}

.Jc-sb {
	justify-content: space-between;
}

.mJc-c {
	justify-content: center;
	text-align: center;
}

.mJc-fe {
	justify-content: flex-end;
	text-align: right;
}

.mAi-fs {
	align-items: flex-start;

	> * {
		vertical-align: top;
	}
}

.mAi-c {
	align-items: center;

	> * {
		vertical-align: middle;
	}
}

.mAi-fe {
	align-items: flex-end;

	> * {
		vertical-align: bottom;
	}
}

.mAi-b {
	align-items: baseline;

	> * {
		vertical-align: baseline;
	}
}

@each $key, $value in $mlu-grid-cols {
	@include mlu-bpm($key) {
		.Jc-sa_#{$key} {
			justify-content: space-around;
		}

		.Jc-sb_#{$key} {
			justify-content: space-between;
		}

		.mJc-fs_#{$key} {
			justify-content: flex-start;
			text-align: left;
		}

		.mJc-c_#{$key} {
			justify-content: center;
			text-align: center;
		}

		.mJc-fe_#{$key} {
			justify-content: flex-end;
			text-align: right;
		}

		@if $MLU-FLAG-EXTENDED {
			.Ai-s_#{$key} {
				align-items: stretch;
			}

			.mAi-fs_#{$key} {
				align-items: flex-start;

				> * {
					vertical-align: top;
				}
			}

			.mAi-c_#{$key} {
				align-items: center;

				> * {
					vertical-align: middle;
				}
			}

			.mAi-fe_#{$key} {
				align-items: flex-end;

				> * {
					vertical-align: bottom;
				}
			}

			.mAi-b_#{$key} {
				align-items: baseline;

				> * {
					vertical-align: baseline;
				}
			}
		}
	}
}
