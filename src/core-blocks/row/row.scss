/*
Row

Block for creating layouts. Suitable for columns, cards and horizontal lists. By default, `inline-block` technology is used for layouts. Using [D utility](section-core-utils.html#kssref-core-utils-d), you can change the layout technology to flexbox.

Parts of the layout within a 'row' are created using the elements:
* [row__col](#kssref-core-blocks-row-row__col)
* [row__item](#kssref-core-blocks-row-row__item)

'Rows' can be put into each other an unlimited number of times.

Markup: ../../../docs/examples/core-blocks/row/row.html

Styleguide: core-blocks.row
*/

/*
row__col

The main element for creating columns in layout. By default, it stretches the entire width of the container. The columns have gutters on the sides and bottom.

The gutters are implemented using the `margin` property. For this reason, the percentage width must be specified using the CSS `calc()`. <br>
If `calc()` is not supported by the browser, then margin is provided in percent as fallback:
```scss
margin: 0 1.5% 24px;
margin: 0 calc(12px) 24px;
```
so that the layout does not collapse. Similar fallback used in the [wrapper](#kssref-core-blocks-wrapper) for fields.

The size of gutter fallback you can find in the [settings](section-sass-tools.html#kssref-sass-tools-settings-general) in `$mlu-grid-gutter-fallback.`

Column width is set using [W utility](section-core-utils.html#kssref-core-utils-w). See example [above](#kssref-core-blocks-row).

You can create nested layouts with a mix of `row` and `row__col` on the same tag. If you don't need double fields in the nested row, use the mix with the `row__item`. See example below.

All examples of the work of nested layouts are [here](section-examples.html#kssref-examples-nested_layouts).

Markup: ../../../docs/examples/core-blocks/row/row__col.html

Styleguide: core-blocks.row.row__col
*/

/*
row__item

Element for creating parts of the layout. By default, it stretches across the width of the content.

The sizes and offsets are set with help of utilities.

Markup: ../../../docs/examples/core-blocks/row/row__item.html

Styleguide: core-blocks.row.row__item
*/

/*
Nested layouts

All variants of nested layouts.

Styleguide: examples.nested_layouts
*/

/*
Set of ready layouts

Simple text

Styleguide: examples.layouts
*/

.row {
	@include mlu-row;
}

.row__col,
.row__cell,
.row__item {
	position: relative;
	display: inline-block;
	max-width: 100%;
	box-sizing: border-box;
	font-size: $mlu-base-font-size;
	font-size: mlu-px2rem($mlu-base-font-size);
	text-align: left;
	vertical-align: top;
	direction: ltr;

	&.row {
		font-size: 0px;
	}

	& > :first-child:not([class]) {
		margin-top: 0px;
	}

	& > :last-child:not([class]) {
		margin-bottom: 0px;
	}
}

.row__col {
	width: 100% - ($mlu-grid-gutter-fallback * 2);
	width: calc(100% - #{mlu-grid-gutter($mlu-bp-sm) * 2});
	margin: 0 $mlu-grid-gutter-fallback $mlu-gtr-sm * 2;
	margin: 0 calc(#{$mlu-gtr-sm}) $mlu-gtr-sm * 2;

	@include mlu-generate-gutter(-1, $calc: 1);
	@include mlu-generate-gutter(-1, $direct: "bottom", $coef: 2);

	&.row {
		margin-bottom: 0px;
	}
}

.row__cell {
	width: 100%;
	@include mlu-generate-gutter($type: "padding");
}
